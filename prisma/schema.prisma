generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Habit {
  id         String   @id @default(uuid())
  title      String
  created_at DateTime
  user_id String
  deactivation_date DateTime?
  activation_date DateTime?
  type HabitType @default(WEEKLY)
  habit_date DateTime?

  user User @relation(fields: [user_id], references: [id])

  dayHabits DayHabit[]
  weekDays  HabitWeekDays[]

  @@map("habits")
}

model HabitWeekDays {
  id       String @id @default(uuid())
  habit_id String
  week_day Int

  habit Habit @relation(fields: [habit_id], references: [id])

  @@unique([habit_id, week_day])
  @@map("habit_week_days")
}

model Day {
  id   String   @id @default(uuid())
  date DateTime
  user_id String

  user User @relation(fields: [user_id], references: [id])

  dayHabits DayHabit[]

  @@unique([date, user_id])
  @@map("days")
}

model DayHabit {
  id String @id @default(uuid())

  day_id   String
  habit_id String

  day   Day   @relation(fields: [day_id], references: [id])
  habit Habit @relation(fields: [habit_id], references: [id])

  @@unique([day_id, habit_id])
  @@map("day_habits")
}

model Year {
  id          String @id @default(uuid())
  year_number Int
  user_id String

  user User @relation(fields: [user_id], references: [id])

  @@map("years")
}

model User {
  id String @id @default(uuid())
  email String

  years Year[]
  habits Habit[]
  days Day[]
  color Color?

  @@map("users")
}

model NotificationToken {
  id String @id @default(uuid())
  token String
  user_id String
}

model Color {
  id String @id @default(uuid())
  color_1 String
  color_2 String
  color_3 String
  color_4 String
  color_5 String

  user_id String @unique

  user User @relation(fields: [user_id], references: [id])

  @@map("colors")
}

enum HabitType {
  SPECIFIC_DATE
  WEEKLY
}
